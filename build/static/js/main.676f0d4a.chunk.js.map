{"version":3,"sources":["logo.svg","components/chart_page.js","App.js","reportWebVitals.js","index.js"],"names":["MyCharts","state","data","setInterval","axios","get","then","console","log","Items","setState","e","style","margin","width","LineChart","height","this","top","right","bottom","left","Tooltip","Legend","Line","type","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","minTickGap","padding","Label","dy","dx","value","position","angle","textAnchor","YAxis","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAAe,I,yIC6DAA,E,4MArDXC,MAAQ,CAACC,KAAM,I,uDAEf,WAAoB,IAAD,OACf,IACIC,aAAY,WACRC,IAAMC,IAAI,gCAAgCC,MAAK,SAACJ,GAC5CK,QAAQC,IAAIN,EAAKA,KAAKO,OACtB,EAAKC,SAAS,CACVR,KAAOA,EAAKA,KAAKO,aAG1B,KACH,MAAME,GACNJ,QAAQC,IAAIG,M,oBAMpB,WACI,OACI,qBAAKC,MAAO,CAACC,OAAQ,OAAQC,MAAO,OAApC,SACI,eAACC,EAAA,EAAD,CAAWD,MAAO,KAAME,OAAQ,IAAKd,KAAMe,KAAKhB,MAAMC,KAAMW,OAAQ,CAAEK,IAAK,EAAGC,MAAO,GAAIC,OAAQ,EAAGC,KAAM,GAA1G,UACI,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,KAAK,WAAWC,QAAQ,iBAAiBC,OAAO,YACtD,cAACC,EAAA,EAAD,CAAeD,OAAO,OAAOE,gBAAgB,QAC7C,cAACC,EAAA,EAAD,CAAOL,KAAK,WAAWC,QAAQ,UAAUK,WAAW,KAAKC,QAAS,CAAEb,MAAO,IAA3E,SACI,cAACc,EAAA,EAAD,CACIC,GAAM,GACNC,IAAO,GACPC,MAAM,eACNC,SAAS,cACTL,QAAS,CAAEd,IAAK,IAChBoB,MAAO,EACP1B,MAAO,CAAE2B,WAAY,cAI7B,cAACC,EAAA,EAAD,CAAOf,KAAK,SAAZ,SACI,cAACQ,EAAA,EAAD,CACAG,MAAM,gBACNC,SAAS,aACTC,OAAQ,GACR1B,MAAO,CAAE2B,WAAY,uB,GA9CtBE,IAAMC,WCQdC,MAVf,WACE,OACE,sBAAKC,UAAU,MAAf,UACQ,6DACA,+CACA,cAAC,EAAD,QCGGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.676f0d4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\n\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Label } from 'recharts';\r\n\r\nclass MyCharts extends React.Component{\r\n\r\n    state = {data: []};\r\n\r\n    componentDidMount(){\r\n        try {\r\n            setInterval(()=>{\r\n                axios.get('http://localhost:8000/getall').then((data)=>{\r\n                    console.log(data.data.Items);\r\n                    this.setState({\r\n                        data : data.data.Items\r\n                    })\r\n                })\r\n            }, 5000);\r\n          } catch(e) {\r\n            console.log(e);\r\n          }\r\n          \r\n        \r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={{margin: 'auto', width: '60%'}}>\r\n                <LineChart width={1400} height={700} data={this.state.data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\r\n                    <Tooltip/>\r\n                    <Legend/>\r\n                    <Line type=\"monotone\" dataKey=\"CupcakeCount.N\" stroke=\"#8884d8\" />\r\n                    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n                    <XAxis type=\"category\" dataKey=\"Month.S\" minTickGap=\"10\" padding={{ right: 20 }}>\r\n                        <Label\r\n                            dy = {20}\r\n                            dx = {-40}\r\n                            value=\"Year & Month\"\r\n                            position=\"insideRight\"\r\n                            padding={{ top: 12 }}\r\n                            angle={0}\r\n                            style={{ textAnchor: 'middle' }}\r\n                            />\r\n                            \r\n                    </XAxis>\r\n                    <YAxis type=\"number\">\r\n                        <Label\r\n                        value=\"CupCake Count\"\r\n                        position=\"insideLeft\"\r\n                        angle={-90}\r\n                        style={{ textAnchor: 'middle' }}\r\n                        />\r\n                    </YAxis>\r\n                </LineChart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyCharts;","import logo from './logo.svg';\nimport './App.css';\nimport MyCharts from './components/chart_page'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n            <h1>DynamoDb Cupcake Count Data</h1>\n            <h3>Using Go Lang</h3> \n            <MyCharts/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}